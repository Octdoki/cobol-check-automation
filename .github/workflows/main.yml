name: COBOL Check Automation

on:
  push:
    branches: [ main ]

jobs:
  cobol-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10   # Automatically stop job if it exceeds 10 minutes

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Java (required by COBOL Check)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Setup Node.js (for Zowe CLI)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 4Ô∏è‚É£ Install Zowe CLI
      - name: Install Zowe CLI
        run: npm install -g @zowe/cli --prefer-offline

      # 5Ô∏è‚É£ Configure Zowe CLI profile (fast direct JSON method üöÄ)
      - name: Configure Zowe CLI profile
        env:
          ZOS_HOST: ${{ secrets.ZOS_HOST }}
          ZOS_PORT: ${{ secrets.ZOS_PORT }}
          ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          echo "üîß Creating Zowe CLI configuration file..."

          # Set default values if secrets are not provided
          HOST_VALUE=${ZOS_HOST:-dummy-host}
          PORT_VALUE=${ZOS_PORT:-443}
          USER_VALUE=${ZOWE_USERNAME:-dummy-user}
          PASS_VALUE=${ZOWE_PASSWORD:-dummy-pass}

          cat <<EOF > zowe.config.json
          {
            "profiles": {
              "zosmf": {
                "type": "zosmf",
                "properties": {
                  "host": "$HOST_VALUE",
                  "port": "$PORT_VALUE",
                  "user": "$USER_VALUE",
                  "password": "$PASS_VALUE",
                  "rejectUnauthorized": false
                }
              }
            },
            "defaults": {
              "zosmf": "zosmf"
            }
          }
          EOF

          echo "‚úÖ Zowe CLI config created."
          echo "üîπ Host: $HOST_VALUE"
          echo "üîπ Port: $PORT_VALUE"

      # 6Ô∏è‚É£ Verify Zowe CLI installation
      - name: Check Zowe CLI version
        run: |
          echo "üì¶ Checking Zowe CLI version..."
          zowe --version

      # 7Ô∏è‚É£ Upload COBOL Check files to Mainframe USS
      - name: Setup MainFrame Environment and Upload COBOL Check
        env:
          ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          echo "üì§ Uploading COBOL Check files to Mainframe USS..."
          chmod +x .github/scripts/zowe_operations.sh
          .github/scripts/zowe_operations.sh
          echo "‚úÖ Upload complete." 

      # 8Ô∏è‚É£ Run COBOL Check on Mainframe
      - name: Run COBOL Check on Mainframe
        env:
          ZOWE_USERNAME: ${{ secrets.ZOWE_USERNAME }}
          ZOWE_PASSWORD: ${{ secrets.ZOWE_PASSWORD }}
        run: |
          echo "üß© Running COBOL Check on z/OS..."
          chmod +x .github/scripts/mainframe_operations.sh
          .github/scripts/mainframe_operations.sh
          echo "‚úÖ COBOL Check execution completed successfully."
